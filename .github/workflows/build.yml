name: Build and Release AppImage

on:
  push:
    branches: [ main ]
    paths:
      - 'linux-cru.py'
      - 'build_appimage.sh'
      - '.github/workflows/build.yml'
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write
  packages: write
  releases: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm base-devel python tk xorg-apps imagemagick wget git

    - name: Build AppImage
      run: |
        chmod +x build_appimage.sh
        ./build_appimage.sh

    - name: Generate new tag
      id: tag
      run: |
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
        major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
        minor=$(echo $latest_tag | cut -d. -f2)
        patch=$(echo $latest_tag | cut -d. -f3)
        new_patch=$((patch + 1))
        new_tag="v$major.$minor.$new_patch"
        echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.new_tag }}
        name: Release ${{ steps.tag.outputs.new_tag }}
        draft: false
        prerelease: false
        files: Linux_CRU-x86_64.AppImage
        body: |
          Automated release for commit ${{ github.sha }}
          
          Changes in this release:
          - Updated AppImage build
          
          Download the AppImage, make it executable with `chmod +x Linux_CRU-x86_64.AppImage`, and run it!
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}